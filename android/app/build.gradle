apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    compileOptions.incremental = false
    defaultConfig {
        applicationId "itc.com.disasterprobe"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Enabling multidex support.
        multiDexEnabled true
    }
    packagingOptions {
        doNotStrip "*/*/libdjivideo.so"
        doNotStrip "*/*/libSDKRelativeJNI.so"
        doNotStrip "*/*/libFlyForbid.so"
        doNotStrip "*/*/libduml_vision_bokeh.so"
        doNotStrip "*/*/libyuv2.so"
        doNotStrip "*/*/libGroudStation.so"
        doNotStrip "*/*/libFRCorkscrew.so"
        doNotStrip "*/*/libUpgradeVerify.so"
        doNotStrip "*/*/libFR.so"
        doNotStrip "*/*/libDJIFlySafeCore.so"
        doNotStrip "*/*/libdjifs_jni.so"
        doNotStrip "*/*/libsfjni.so"
        exclude 'META-INF/rxjava.properties'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    sourceSets { debug { assets.srcDirs = ['src/debug/assets', 'src/debug/assets/'] } }

    // https://stackoverflow.com/questions/37347326/errorconflict-with-dependency-com-google-code-findbugsjsr305
    // Only compile for version stated for all dependencies
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation "com.google.android.gms:play-services-maps:$rootProject.playMapsVersion"
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-rc01'

    // Guava (extra core libraries)
    implementation 'com.google.guava:guava:25.0-android'

    // UI
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    implementation 'info.androidhive:fontawesome:0.0.5'

    // DJI sdk
    implementation ('com.dji:dji-sdk:4.13', {
//             Uncomment the following line if your app does not need Anti Distortion for
//             Mavic 2 Pro and Mavic 2 Zoom. It will greatly reducing the size of the APK:
        exclude module: 'library-anti-distortion'
//             Uncomment the following line if your APP does not need network RTK
        exclude module: 'library-networkrtk-helper'
    })
    implementation ('com.dji:dji-uxsdk:4.13', {
        /**
         * Uncomment the "library-anti-distortion" if your app does not need Anti Distortion for Mavic 2 Pro and Mavic 2 Zoom.
         * Uncomment the "fly-safe-database" if you need database for release, or we will download it when DJISDKManager.getInstance().registerApp
         * is called.
         * Both will greatly reducing the size of the APK.
         */
        exclude module: 'library-anti-distortion'
        exclude module: 'fly-safe-database'

        /**
         * Uncomment the following line to exclude amap from the app.
         * Note that Google Play Store does not allow APKs that include this library.
         */
        // exclude group: 'com.amap.api'
    })
    compileOnly 'com.dji:dji-sdk-provided:4.13'

    // Network service discovery
    implementation "com.github.andriydruk:dnssd:$rootProject.dnssdVersion"

    // communication
    implementation("io.socket:socket.io-client:$rootProject.socketIOVersion") {
        exclude group: 'org.json', module: 'json'
    }
    implementation 'com.koushikdutta.ion:ion:3.0.9'

    // parser
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'javax.inject:javax.inject:1'

    // reactive
    implementation "org.greenrobot:eventbus:$rootProject.eventbusVersion"

    // code generator for view
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.0.0'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation 'org.robolectric:robolectric:4.3'
//    testImplementation 'commons-codec:commons-codec:1.13'
    testCompileOnly 'org.json:json:20171018'

    // UI testing
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

}

